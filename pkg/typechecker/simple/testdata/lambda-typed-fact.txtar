-- input --
(define fact (lambda (x)
	"fact implements the factorial function in buresu.
	:: (Callable (Int) Int)"
(block
    (if (< x 1) (block (return! 0)))

    (define total 1)
    (while (> x 1) (block
        (set! total (* total x))
        (set! x (+ x -1))
    ))

    (return! total)
)))

(fact 10)

-- output --
(Callable (Int) Int)
Int
